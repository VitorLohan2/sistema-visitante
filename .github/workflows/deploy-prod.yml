name: Deploy to Production (tags only)

on:
  # roda automaticamente quando uma TAG é criada (ex: v1.2.0)
  push:
    tags:
      - 'v*'
  # permite rodar manualmente via GitHub UI, escolhendo a tag
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag para deploy (ex: v1.2.3). Se preenchido, fará deploy dessa tag.'
        required: false

jobs:
  build-and-push:
    name: Build and Push Image (for tag)
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.define-tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Define tag version
        id: define-tag
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        run: |
          IMAGE="${{ secrets.DOCKER_USERNAME }}/liberae:${{ steps.define-tag.outputs.tag }}"
          echo "🏗️ Building $IMAGE"
          docker build -t "$IMAGE" ./backend
          docker push "$IMAGE"

  deploy-prod:
    name: Deploy to Production Server
    needs: build-and-push
    runs-on: self-hosted
    steps:
      - name: Criar arquivo .deploy_env com variáveis
        run: |
          TAG="${{ needs.build-and-push.outputs.tag }}"
          echo "IMAGE_TAG=$TAG" > /home/dev/sistema/prod/.deploy_env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> /home/dev/sistema/prod/.deploy_env
          chmod 600 /home/dev/sistema/prod/.deploy_env
          echo "✅ .deploy_env criado com sucesso:"
          cat /home/dev/sistema/prod/.deploy_env

      - name: Deploy na produção (EC2)
        working-directory: /home/dev/sistema/prod
        run: |
          set -e
          source /home/dev/sistema/prod/.deploy_env
          echo "🚀 Fazendo deploy da imagem: ${DOCKER_USERNAME}/liberae:${IMAGE_TAG}"

          docker compose -f docker-compose-prod.yml down
          docker compose -f docker-compose-prod.yml pull
          docker compose -f docker-compose-prod.yml up -d
          docker image prune -f
          echo "✅ Deploy de produção concluído com sucesso!"
