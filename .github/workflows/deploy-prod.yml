## TESTE
name: Deploy to Production

on:
  workflow_dispatch:  # Trigger manual pelo GitHub UI
  push:
    branches: [main]  # Trigger autom√°tico ao fazer merge na main

jobs:
  build-and-deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build da imagem de produ√ß√£o
        run: |
          echo "üèóÔ∏è Build da imagem de produ√ß√£o..."
          docker build -t ${{ secrets.DOCKER_USERNAME }}/liberae:prod ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/liberae:prod

      - name: Atualizar imagem latest
        run: |
          echo "üè∑Ô∏è Atualizando imagem latest..."
          docker tag ${{ secrets.DOCKER_USERNAME }}/liberae:prod ${{ secrets.DOCKER_USERNAME }}/liberae:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/liberae:latest

  deploy-prod:
    name: Deploy to Production Server
    runs-on: self-hosted
    needs: build-and-deploy
    steps:
      - name: Deploy na produ√ß√£o
        working-directory: /home/dev/sistema/prod
        run: |
          echo "üîΩ Parando containers de produ√ß√£o..."
          docker compose -f docker-compose-prod.yml down

          echo "‚¨áÔ∏è Baixando nova imagem de produ√ß√£o..."
          docker compose -f docker-compose-prod.yml pull

          echo "üöÄ Subindo produ√ß√£o atualizada..."
          docker compose -f docker-compose-prod.yml up -d

          echo "üßπ Limpando imagens antigas..."
          docker image prune -f

          echo "‚úÖ Deploy de produ√ß√£o conclu√≠do!"